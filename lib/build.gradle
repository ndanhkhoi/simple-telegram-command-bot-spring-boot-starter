/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.5.8' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'maven-publish'
}

def getAppVersion = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    def commitId = stdout.toString().replace("\n", "").replace("\r", "").trim()
    stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'tag', '--points-at', commitId
        standardOutput = stdout
    }
    def tagName = stdout.toString().replace("\n", "").replace("\r", "").trim()
    def versionName = 'git-' + commitId
    if (tagName != null && "" != tagName) {
        versionName = tagName
    }
    return versionName
}

group = 'com.ndanhkhoi'
version = getAppVersion()
sourceCompatibility = '11'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.telegram:telegrambots:5.4.0.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    api 'io.projectreactor:reactor-core:3.4.13'
    api 'io.projectreactor.addons:reactor-extra:3.4.5'
    api 'org.reflections:reflections:0.10.2'
    api 'org.apache.commons:commons-lang3:3.12.0'
    api 'org.apache.commons:commons-text:1.9'
    api 'commons-io:commons-io:2.11.0'
    api 'org.apache.commons:commons-collections4:4.4'
    api 'commons-beanutils:commons-beanutils:1.9.4'
    api 'commons-codec:commons-codec:1.15'
    api 'com.google.code.gson:gson:2.8.9'
    api 'com.fatboyindustrial.gson-javatime-serialisers:gson-javatime-serialisers:1.1.1'
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.github.ndanhkhoi'
            artifactId = 'simple-telegram-command-bot-spring-boot-starter'
            version = getAppVersion()
            from components.java
        }
    }
    repositories {
        maven {
            url = uri("${buildDir}/publishing-repository")
        }
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    archiveBaseName = 'simple-telegram-command-bot-spring-boot-starter'
}